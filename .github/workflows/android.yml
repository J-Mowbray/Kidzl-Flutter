name: Build Android App
on:
  push:
    branches:
      - main  # Runs when the main branch is updated

jobs:
  build-android:
    runs-on: ubuntu-latest  # Ubuntu (free on GitHub Actions)

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Java 17 (Temurin)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make Gradlew Executable
        run: chmod +x android/gradlew

      - name: Force Gradle to Use Java 17
        run: echo "org.gradle.java.home=/usr/lib/jvm/java-17-openjdk-amd64" >> android/gradle.properties


      - name: Verify Java Version
        run: java -version

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build React app
        run: npm run build

      - name: Install Capacitor CLI
        run: npm install -g @capacitor/cli

      - name: Initialize Capacitor
        run: npx cap init "Kidzl" "xyz.kidzl.app"

      - name: Install Capacitor Android Platform
        run: npm install @capacitor/android

      - name: Create Capacitor config
        run: |
          echo 'export default { appId: "xyz.kidzl.app", appName: "Kidzl", webDir: "build", bundledWebRuntime: false };' > capacitor.config.ts
      
      - name: Ensure Android platform exists
        run: |
          if [ ! -d "android" ]; then
            npx cap add android
          fi
          npx cap sync android


      - name: Build React app
        run: npm run build

      - name: Verify web assets exist
        run: ls -la ./build  # Check if the build folder exists and has files

      - name: Ensure Capacitor knows the correct webDir
        run: |
          sed -i "s|webDir: '.*'|webDir: 'build'|" capacitor.config.ts
        
      - name: Sync Capacitor with Android
        run: npx cap sync android

      - name: Ensure Gradle Wrapper Exists
        run: |
          mkdir -p android/gradle/wrapper
          curl -o android/gradle/wrapper/gradle-wrapper.jar https://services.gradle.org/distributions/gradle-8.2.1/gradle-8.2.1-all.zip
          unzip -o android/gradle/wrapper/gradle-wrapper.jar -d android/gradle/wrapper/
          curl -o android/gradlew https://raw.githubusercontent.com/gradle/gradle/master/gradlew
          curl -o android/gradlew.bat https://raw.githubusercontent.com/gradle/gradle/master/gradlew.bat
          chmod +x android/gradlew

      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleDebug  # Creates APK in android/app/build/outputs/apk/debug/

      - name: Upload APK as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
